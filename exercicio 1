#include <stdio.h>
#include <stdlib.h>

struct entrada {
    int id;
    int a, l, c;
};

void quick_sort(int *A, int tam);

int* solucao(struct entrada *entradas, int n, int p)
{
    quick_sort(entradas,n);
    return ret;
}

int main()
{
    int *ret;
    int t, i, j;
    int T, N, P, ID, A, L, C;

    scanf("%d", &T);

    for (t = 0; t < T; t++) {

        scanf("%d %d", &N, &P);

        struct entrada *entradas = (struct entrada *) malloc(N * sizeof(struct entrada));
        for (i = 0; i < N; i++) {
            scanf("%d %d %d %d", &entradas[i].id, &entradas[i].a, &entradas[i].l, &entradas[i].c);
        }

        ret = solucao(entradas, N, P);

        for (i = 0; i < P; i++)
            if (i + 1 < P)
                printf("%d ", ret[i]);
            else
                printf("%d\n", ret[i]);
    }

    return 0;
}

void quicksort(int *A, int tam) {
  if (tam < 2) return;

  int pivo = A[tam / 2];

  int i, j;
  for (i = 0, j = tam - 1; ; i++, j--) {
    while (A[i] < pivo) i++;
    while (A[j] > pivo) j--;

    if (i >= j) break;

    int temp = A[i];
    A[i]     = A[j];
    A[j]     = temp;
  }

  quicksort(A, i);
  quicksort(A + i, tam - i);
}
